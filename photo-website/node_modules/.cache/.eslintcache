[{"/Users/casey/Desktop/photo-website/src/index.js":"1","/Users/casey/Desktop/photo-website/src/App.js":"2","/Users/casey/Desktop/photo-website/src/pages/Homepage.js":"3","/Users/casey/Desktop/photo-website/src/component/Search.js":"4","/Users/casey/Desktop/photo-website/src/component/Footer.js":"5","/Users/casey/Desktop/photo-website/src/component/Nav.js":"6","/Users/casey/Desktop/photo-website/src/pages/About.js":"7","/Users/casey/Desktop/photo-website/src/component/Picture.js":"8"},{"size":290,"mtime":1644224170602,"results":"9","hashOfConfig":"10"},{"size":516,"mtime":1644304693238,"results":"11","hashOfConfig":"10"},{"size":3630,"mtime":1644375209635,"results":"12","hashOfConfig":"10"},{"size":467,"mtime":1644370763289,"results":"13","hashOfConfig":"10"},{"size":135,"mtime":1644222899108,"results":"14","hashOfConfig":"10"},{"size":307,"mtime":1644227465623,"results":"15","hashOfConfig":"10"},{"size":165,"mtime":1644229042517,"results":"16","hashOfConfig":"10"},{"size":409,"mtime":1644305569047,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"103ecb0",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"24"},"/Users/casey/Desktop/photo-website/src/index.js",[],[],"/Users/casey/Desktop/photo-website/src/App.js",[],[],["47","48"],"/Users/casey/Desktop/photo-website/src/pages/Homepage.js",["49","50"],[],"import React, { useState, useEffect } from \"react\"; //useEffect 當頁面被開啟時馬上可以執行search\nimport Search from \"../component/Search\";\nimport Picture from \"../component/Picture\";\nimport { dblClick } from \"@testing-library/user-event/dist/click\";\n\nconst Homepage = () => {\n  const [input, setInput] = useState(\"\");\n  //TODO: 這個data是要放入所有圖片的資訊\n  let [data, setData] = useState(null);\n  let [currentSearch, setCurrentSearch] = useState(\"\");\n  //TODO: useState(2) 這樣才不會出現重複的，因為initialURL page = 1\n  //我們這時候按下more page時 newURL page = 1，還是1所以會重複，如果設定page = 2就不會重複\n  //以上情況是在還沒在search裡面加上setPage(2)的情形\n  let [page, setPage] = useState(1);\n  const auth = \"563492ad6f91700001000001714022688f6c4f42887574e0d15090ae\";\n  const initialURL = \"https://api.pexels.com/v1/curated?page=1&per_page=15\";\n  const searchURL = `https://api.pexels.com/v1/search?query=${currentSearch}&per_page=15&page=1`;\n\n  //Fetch data from pixel API\n  const search = async (url) => {\n    setPage(2);\n    const dataFetch = await fetch(url, {\n      method: \"GET\",\n      headers: { Accept: \"application/json\", Authorization: auth },\n    });\n    let parseData = await dataFetch.json();\n    //TODO: parseData.photos是一個object array\n    setData(parseData.photos);\n    //console.log(parseData);\n  };\n\n  //load more picture\n  const morepicture = async () => {\n    let newURL;\n    if (currentSearch === \"\") {\n      newURL = `https://api.pexels.com/v1/curated?page=${page}&per_page=15`;\n    } else {\n      newURL = `https://api.pexels.com/v1/search?query=${currentSearch}&per_page=15&page=${page}`;\n    }\n    setPage(page + 1);\n    const dataFetch = await fetch(newURL, {\n      method: \"GET\",\n      headers: { Accept: \"application/json\", Authorization: auth },\n    });\n    let parseData = await dataFetch.json();\n    setData(data.concat(parseData.photos));\n  };\n\n  //Fetch data when the page load up\n  //TODO: [] 代表只有首次lode進頁面時會觸發這個useEffect\n  useEffect(() => {\n    search(initialURL);\n  }, []);\n\n  //TODO: 因為在page剛load時就會執行一遍了，跟上面的useEffect一樣，但上面只會執行一次\n  //這個useEffect則是第一次load頁面行執行一次，然後接下來currentSearch變化才會再執行一次\n  useEffect(() => {\n    //search(searchURL);\n    if (currentSearch === \"\") {\n      search(initialURL);\n    } else {\n      search(searchURL);\n    }\n  }, [currentSearch]);\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      <Search\n        //TODO: 這個意思是當我們在Search.js上click search button 後才觸發search(searchURL)\n        search_invoke={() => {\n          //TODO: closure問題\n          //因為編譯器會直接先抓所有的變數，如果沒有在這closure設定的話，就去global抓\n          //這時searchURL裡面的currentSearch = \"\"，所以就算先用setCurrentSearch(input)也沒用\n          //會在setCurrentSearch(input)執行前就先抓好變數值\n          //所以按下search button我們就只需要改變currentSearch的值就好\n          //而再使用useEffect來觸發search() function\n          setCurrentSearch(input);\n          //search(searchURL);\n        }}\n        setInput={setInput}\n      />\n      <div className=\"pictures\">\n        {data &&\n          data.map((d) => {\n            return <Picture data={d} />;\n          })}\n      </div>\n      <div className=\"morePicture\">\n        <button onClick={morepicture}>Load More</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Homepage;\n","/Users/casey/Desktop/photo-website/src/component/Search.js",[],[],"/Users/casey/Desktop/photo-website/src/component/Footer.js",[],[],["51","52"],"/Users/casey/Desktop/photo-website/src/component/Nav.js",[],[],["53","54"],"/Users/casey/Desktop/photo-website/src/pages/About.js",[],[],"/Users/casey/Desktop/photo-website/src/component/Picture.js",["55"],[],"import React from \"react\";\n\nconst Picture = ({ data }) => {\n  return (\n    <div className=\"picture\">\n      <p> {data.photographer}</p>\n\n      <div className=\"imageContainer\">\n        <img src={data.src.large} alt=\"\" />\n      </div>\n      <p>\n        Download Image{\" \"}\n        <a target=\"_blank\" href={data.src.large}>\n          Click Here\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default Picture;\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":64,"column":6,"nodeType":"66","endLine":64,"endColumn":21,"suggestions":"67"},{"ruleId":"56","replacedBy":"68"},{"ruleId":"58","replacedBy":"69"},{"ruleId":"56","replacedBy":"70"},{"ruleId":"58","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":13,"column":9,"nodeType":"74","messageId":"75","endLine":13,"endColumn":50,"fix":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'dblClick' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchURL'. Either include it or remove the dependency array.","ArrayExpression",["79"],["77"],["78"],["77"],["78"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"80","text":"81"},"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},[318,318]," rel=\"noreferrer\"","Update the dependencies array to be: [currentSearch, searchURL]",{"range":"84","text":"85"},[2209,2224],"[currentSearch, searchURL]"]